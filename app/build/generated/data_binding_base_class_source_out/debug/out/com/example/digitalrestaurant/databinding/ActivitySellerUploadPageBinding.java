// Generated by view binder compiler. Do not edit!
package com.example.digitalrestaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.digitalrestaurant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySellerUploadPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText nameOfItem;

  @NonNull
  public final EditText nationalityOfItem;

  @NonNull
  public final TextView pageOneMenuKey;

  @NonNull
  public final TextView pageOneomekey;

  @NonNull
  public final EditText pictureOfItem;

  @NonNull
  public final EditText priceOfItem;

  @NonNull
  public final TextView selleruploadBtn;

  private ActivitySellerUploadPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText nameOfItem, @NonNull EditText nationalityOfItem,
      @NonNull TextView pageOneMenuKey, @NonNull TextView pageOneomekey,
      @NonNull EditText pictureOfItem, @NonNull EditText priceOfItem,
      @NonNull TextView selleruploadBtn) {
    this.rootView = rootView;
    this.nameOfItem = nameOfItem;
    this.nationalityOfItem = nationalityOfItem;
    this.pageOneMenuKey = pageOneMenuKey;
    this.pageOneomekey = pageOneomekey;
    this.pictureOfItem = pictureOfItem;
    this.priceOfItem = priceOfItem;
    this.selleruploadBtn = selleruploadBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySellerUploadPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySellerUploadPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_seller_upload_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySellerUploadPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nameOfItem;
      EditText nameOfItem = ViewBindings.findChildViewById(rootView, id);
      if (nameOfItem == null) {
        break missingId;
      }

      id = R.id.nationalityOfItem;
      EditText nationalityOfItem = ViewBindings.findChildViewById(rootView, id);
      if (nationalityOfItem == null) {
        break missingId;
      }

      id = R.id.pageOneMenuKey;
      TextView pageOneMenuKey = ViewBindings.findChildViewById(rootView, id);
      if (pageOneMenuKey == null) {
        break missingId;
      }

      id = R.id.pageOneomekey;
      TextView pageOneomekey = ViewBindings.findChildViewById(rootView, id);
      if (pageOneomekey == null) {
        break missingId;
      }

      id = R.id.pictureOfItem;
      EditText pictureOfItem = ViewBindings.findChildViewById(rootView, id);
      if (pictureOfItem == null) {
        break missingId;
      }

      id = R.id.priceOfItem;
      EditText priceOfItem = ViewBindings.findChildViewById(rootView, id);
      if (priceOfItem == null) {
        break missingId;
      }

      id = R.id.selleruploadBtn;
      TextView selleruploadBtn = ViewBindings.findChildViewById(rootView, id);
      if (selleruploadBtn == null) {
        break missingId;
      }

      return new ActivitySellerUploadPageBinding((ConstraintLayout) rootView, nameOfItem,
          nationalityOfItem, pageOneMenuKey, pageOneomekey, pictureOfItem, priceOfItem,
          selleruploadBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
